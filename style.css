h3 {
    text-transform: capitalize;
    text-align: center;
}

/* to place the grid item  */
.container {
    width: 80%;
    margin: 20px auto;
    background-color: rgb(205, 205, 205);
    display: grid;
}

.header1 {
    background-color: aquamarine;
}
.header2 {
    background-color: rgb(50, 159, 255);
}
.header3 {
    background-color: rgb(88, 255, 46);
}
.header4 {
    background-color: rgb(255, 77, 136);
}
.header5 {
    background-color: rgb(219, 255, 37);
}
.header6 {
    background-color: rgb(255, 0, 0);
}
.header7 {
    background-color: rgb(251, 255, 26);
}
.header8 {
    background-color: rgb(255, 156, 18);
}
.header9 {
    background-color: rgb(0, 6, 172);
}

/* use display grid and declare how much columns and  rows in  */
.containergrid1 {
    display: grid;
    grid-template-columns: 1fr 3fr;
    grid-template-rows: 100px 200px 200px 50px;
}

/* grid auto rows used to set the additional rows which is not declared */
.containergrid2 {
    display: grid;
    grid-template-columns: 100px 300px;
    grid-template-rows: 100px 200px;
    grid-auto-rows:75px;
}

/* grid auto flow used to set the position if there is new grid (column/row) */
.containergrid3 {
    display: grid;
    grid-template-columns: 100px 300px;
    grid-template-rows: 100px 200px 50px;
    grid-auto-flow: column;
}

/* repeat used to declare the size of grid as a repeat */
.containergrid4 {
    display: grid;
    grid-template-columns: repeat(2, 1fr) repeat(3, 100px);
    grid-template-rows: 100px 200px 50px;
}

/* min content used if want the size of item as minimum length of content in. There is another value, that is max content if want the size of item as max length of content in   */
.containergrid5 {
    display: grid;
    grid-template-columns: min-content max-content 150px;
    grid-template-rows: 100px 200px 50px;
}